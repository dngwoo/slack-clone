(self.webpackChunksleact_ts_front=self.webpackChunksleact_ts_front||[]).push([[506],{6023:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>he});var a=n(6809),r=n.n(a);const l={},o=e=>{if(!e)return[void 0,t];function t(){e&&l[e]&&(l[e].disconnect(),delete l[e])}return l[e]||(l[e]=r()("https://sleact.nodebird.com/ws-"+e,{transports:["websocket"]}),console.info("create socket",e,l[e].id)),[l[e],t]};var i=n(8517);const c=(0,i.Z)("div",{target:"e1yu0210"})({name:"146q31f",styles:"float:right;"}),s=(0,i.Z)("header",{target:"e1yu0211"})({name:"z7c3yo",styles:"height:38px;background:#350d36;color:#ffffff;box-shadow:0 1px 0 0 rgba(255,255,255,0.1);padding:5px;text-align:center;"}),d=(0,i.Z)("img",{target:"e1yu0212"})({name:"sw188w",styles:"width:28px;height:28px;position:absolute;top:5px;right:16px;"}),p=(0,i.Z)("div",{target:"e1yu0213"})({name:"1yfii4x",styles:"padding:20px;& img{display:flex;}& #profile-name{font-weight:bold;display:inline-flex;}& #profile-active{font-size:13px;display:inline-flex;}"}),m=(0,i.Z)("button",{target:"e1yu0214"})({name:"xsdsuh",styles:"border:none;width:100%;border-top:1px solid rgb(29,28,29);background:transparent;display:block;height:33px;padding:5px 20px 5px;outline:none;cursor:pointer;"}),u=(0,i.Z)("div",{target:"e1yu0215"})({name:"13pmxen",styles:"display:flex;flex:1;"}),g=(0,i.Z)("div",{target:"e1yu0216"})({name:"kbjkj2",styles:"width:65px;display:inline-flex;flex-direction:column;align-items:center;background:#3f0e40;border-top:1px solid rgb(82,38,83);border-right:1px solid rgb(82,38,83);vertical-align:top;text-align:center;padding:15px 0 0;"}),h=(0,i.Z)("nav",{target:"e1yu0217"})({name:"1o7bixd",styles:"width:260px;display:inline-flex;flex-direction:column;background:#3f0e40;color:rgb(188,171,188);vertical-align:top;& a{padding-left:36px;color:inherit;text-decoration:none;height:28px;line-height:28px;display:flex;align-items:center;&.selected{color:white;}}& .bold{color:white;font-weight:bold;}& .count{margin-left:auto;background:#cd2553;border-radius:16px;display:inline-block;font-size:12px;font-weight:700;height:18px;line-height:18px;padding:0 9px;color:white;margin-right:16px;}& h2{height:36px;line-height:36px;margin:0;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;font-size:15px;}"}),x=(0,i.Z)("button",{target:"e1yu0218"})({name:"mf88dq",styles:"height:64px;line-height:64px;border:none;width:100%;text-align:left;border-top:1px solid rgb(82,38,83);border-bottom:1px solid rgb(82,38,83);font-weight:900;font-size:24px;background:transparent;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding:0;padding-left:16px;margin:0;color:white;cursor:pointer;"}),b=(0,i.Z)("div",{target:"e1yu0219"})({name:"177dxab",styles:"flex:1;overflow-y:auto;"}),f=(0,i.Z)("div",{target:"e1yu02110"})({name:"1gcspn6",styles:"padding:10px 0 0;& h2{padding-left:20px;}& > button{width:100%;height:28px;padding:4px;border:none;background:transparent;border-top:1px solid rgb(28,29,28);cursor:pointer;&:last-of-type{border-bottom:1px solid rgb(28,29,28);}}"}),k=(0,i.Z)("div",{target:"e1yu02111"})({name:"1rr4qq7",styles:"flex:1;"}),E=(0,i.Z)("button",{target:"e1yu02112"})({name:"1u5ecpm",styles:"color:white;font-size:24px;display:inline-block;width:40px;height:40px;background:transparent;border:none;cursor:pointer;"}),y=(0,i.Z)("button",{target:"e1yu02113"})({name:"1uwj8s5",styles:"display:inline-block;width:40px;height:40px;border-radius:10px;background:white;border:3px solid #3f0e40;margin-bottom:15px;font-size:18px;font-weight:700;color:black;cursor:pointer;"}),w=(0,i.Z)("button",{target:"e1yu02114"})("background:transparent;border:none;width:26px;height:26px;display:inline-flex;justify-content:center;align-items:center;color:white;margin-left:10px;cursor:pointer;",(({collapse:e})=>e&&"\n    & i {\n      transform: none;\n    }\n  "),";");var v=n(7294),_=n(5977),C=n(3727);const Z=({userData:e,channelData:t})=>{const{workspace:n}=(0,_.UO)(),[a]=o(n),[r,l]=(0,v.useState)(!1),[i,c]=(0,v.useState)({}),s=(0,v.useCallback)((()=>{l((e=>!e))}),[]),d=(0,v.useCallback)((e=>()=>{c((t=>({...t,[e]:void 0})))}),[]);(0,v.useEffect)((()=>{console.log("workspace 바꼈다",n),c({})}),[n]);const p=t=>{console.log("message왔다",t);const n=t.content.match(/@\[(.+?)\]\((\d)\)/g);if(n?.find((t=>t.match(/@\[(.+?)\]\((\d)\)/)[2]===e?.id.toString())))return c((e=>({...e,["c-"+t.ChannelId]:(e["c-"+t.ChannelId]||0)+1})));c((e=>({...e,["c-"+t.ChannelId]:e["c-"+t.ChannelId]||0})))};return(0,v.useEffect)((()=>(a?.on("message",p),console.log("socket on message",a?.hasListeners("message"),a),()=>{a?.off("message",p),console.log("socket off message",a?.hasListeners("message"))})),[a,e]),v.createElement(v.Fragment,null,v.createElement("h2",null,v.createElement(w,{collapse:r,onClick:s},v.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),v.createElement("span",null,"Channels")),v.createElement("div",null,!r&&t?.map((e=>{const t=i[`c-${e.id}`];return v.createElement(C.OL,{key:e.name,activeClassName:"selected",to:`/workspace/${n}/channel/${e.name}`,onClick:d(`c-${e.id}`)},v.createElement("span",{className:t!==undefined&&t>=0?"bold":undefined},"# ",e.name),t!==undefined&&t>0&&v.createElement("span",{className:"count"},t))}))))};var S=n(3564),$=n(6848);const z=({userData:e})=>{const{workspace:t}=(0,_.UO)(),{data:n}=(0,$.ZP)(e?`/api/workspace/${t}/members`:null,S.Z),[a]=o(t),[r,l]=(0,v.useState)(!1),[i,c]=(0,v.useState)({}),[s,d]=(0,v.useState)([]),p=(0,v.useCallback)((()=>{l((e=>!e))}),[]),m=(0,v.useCallback)((e=>()=>{c((t=>({...t,[e]:0})))}),[]),u=e=>{console.log("dm왔다",e),c((t=>({...t,[e.SenderId]:t[e.SenderId]?t[e.SenderId]+1:1})))};return(0,v.useEffect)((()=>{console.log("workspace 바꼈다",t),d([]),c({})}),[t]),(0,v.useEffect)((()=>(a?.on("onlineList",(e=>{d(e)})),a?.on("dm",u),console.log("socket on dm",a?.hasListeners("dm"),a),()=>{a?.off("dm",u),console.log("socket off dm",a?.hasListeners("dm")),a?.off("onlineList")})),[a]),v.createElement(v.Fragment,null,v.createElement("h2",null,v.createElement(w,{collapse:r,onClick:p},v.createElement("i",{className:"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline","data-qa":"channel-section-collapse","aria-hidden":"true"})),v.createElement("span",null,"Direct Messages")),v.createElement("div",null,!r&&n?.map((n=>{const a=s.includes(n.id);const r=i[n.id]||0;return v.createElement(C.OL,{key:n.id,activeClassName:"selected",to:`/workspace/${t}/dm/${n.id}`,onClick:m(n.id)},v.createElement("i",{className:`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${a?"c-presence--active c-icon--presence-online":"c-icon--presence-offline"}`,"aria-hidden":"true","data-qa":"presence_indicator","data-qa-presence-self":"false","data-qa-presence-active":"false","data-qa-presence-dnd":"false"}),v.createElement("span",{className:r>0?"bold":undefined},n.nickname),n.id===e?.id&&v.createElement("span",null," (나)"),r>0&&v.createElement("span",{className:"count"},r))}))))},I=(0,i.Z)("div",{target:"eus8aqr0"})({name:"lwth7x",styles:"position:fixed;top:0;right:0;left:0;bottom:0;z-index:1000;& > div{position:absolute;display:inline-block;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;min-width:360px;z-index:512;max-height:calc(100vh - 20px);color:rgb(29,28,29);}"}),q=(0,i.Z)("button",{target:"eus8aqr1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),D=({closeButton:e,style:t,show:n,children:a,onCloseModal:r})=>{const l=(0,v.useCallback)((e=>{e.stopPropagation()}),[]);return n?v.createElement(I,{onClick:r},v.createElement("div",{onClick:l,style:t},e&&v.createElement(q,{onClick:r},"×"),a)):null};D.defaultProps={closeButton:!0};const A=D,B=(0,i.Z)("div",{target:"e1q3ybao0"})({name:"1ol8hdt",styles:"position:fixed;text-align:center;left:0;bottom:0;top:0;right:0;z-index:1022;& > div{margin-top:200px;display:inline-block;width:440px;background:white;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 4px 12px 0 rgba(0,0,0,0.12);background-color:rgba(var(--sk_foreground_min_solid,248,248,248),1);border-radius:6px;user-select:none;max-width:440px;padding:30px 40px 0;z-index:1012;position:relative;}"}),T=(0,i.Z)("button",{target:"e1q3ybao1"})({name:"87xlfi",styles:"position:absolute;right:10px;top:6px;background:transparent;border:none;font-size:30px;cursor:pointer;"}),N=({show:e,children:t,onCloseModal:n})=>{const a=(0,v.useCallback)((e=>{e.stopPropagation()}),[]);return e?v.createElement(B,{onClick:n},v.createElement("div",{onClick:a},v.createElement(T,{onClick:n},"×"),t)):null};var M=n(8678),P=n(1039);const R=(0,i.Z)("div",{target:"e298qi10"})({name:"136i1lu",styles:"display:flex;width:100%;padding:20px;padding-top:0;"}),U=(0,i.Z)("form",{target:"e298qi11"})({name:"1128hi6",styles:"color:rgb(29,28,29);font-size:15px;width:100%;border-radius:4px;border:1px solid rgb(29,28,29);"}),j=(0,i.Z)(P.r,{target:"e298qi12"})({name:"hgrcve",styles:"font-family:Slack-Lato,appleLogo,sans-serif;font-size:15px;padding:8px 9px;& strong{background:skyblue;}& textarea{height:44px;padding:9px 10px !important;outline:none !important;border-radius:4px !important;resize:none !important;line-height:22px;border:none;}& ul{border:1px solid lightgray;max-height:200px;overflow-y:auto;padding:9px 10px;background:white;border-radius:4px;width:150px;}"}),O=(0,i.Z)("div",{target:"e298qi13"})({name:"pvyb1v",styles:"position:relative;background:rgb(248,248,248);height:41px;display:flex;border-top:1px solid rgb(221,221,221);align-items:center;border-bottom-left-radius:4px;border-bottom-right-radius:4px;"}),L=(0,i.Z)("button",{target:"e298qi14"})({name:"b9l5gg",styles:"position:absolute;right:5px;top:5px;"}),W=(0,i.Z)("button",{target:"e298qi15"})("padding:4px 20px;background:transparent;border:none;display:flex;align-items:center;color:rgb(28,29,28);width:100%;& img{margin-right:5px;}",(({focus:e})=>e&&"\n    background: #1264a3;\n    color: white;\n  "),";");var F=n(9367),H=n.n(F),Y=n(6182),K=n.n(Y);const G=({onSubmitForm:e,chat:t,onChangeChat:n,placeholder:a,data:r})=>{const l=(0,v.useRef)(null);(0,v.useEffect)((()=>{l.current&&H()(l.current)}),[l.current]);const o=(0,v.useCallback)((t=>{"Enter"===t.key&&(t.shiftKey||(t.preventDefault(),e(t)))}),[t]),i=(0,v.useCallback)(((e,t,n,a,l)=>r?v.createElement(W,{focus:l},v.createElement("img",{src:K().url(r[a].email,{s:"20px"}),alt:r[a].nickname}),v.createElement("span",null,n)):null),[r]);return v.createElement(R,null,v.createElement(U,{onSubmit:e},v.createElement(j,{id:"editor-chat",value:t,onChange:n,onKeyPress:o,placeholder:a,inputRef:l,allowSuggestionsAboveCursor:!0},v.createElement(P.p,{appendSpaceOnAdd:!0,trigger:"@",data:r?.map((e=>({id:e.id,display:e.nickname})))||[],renderSuggestion:i})),v.createElement(O,null,v.createElement(L,{className:"c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send"+(t?.trim()?"":" c-texty_input__button--disabled"),"data-qa":"texty_send_button","aria-label":"Send message","data-sk":"tooltip_parent",type:"submit",disabled:!t?.trim()},v.createElement("i",{className:"c-icon c-icon--paperplane-filled","aria-hidden":"true"})))))},J=(0,i.Z)("div",{target:"ec89ap00"})({name:"13fa69t",styles:"display:flex;padding:8px 20px;&:hover{background:#eee;}& > div:first-of-type{display:flex;width:36px;margin-right:8px;& img{width:36px;height:36px;}}& > div:last-of-type{display:flex;flex:1;}& a{text-decoration:none;color:deepskyblue;}"});var Q=n(7484),V=n.n(Q),X=n(8817);const ee=(0,v.memo)((({data:e})=>{const{workspace:t}=(0,_.UO)(),n="Sender"in e?e.Sender:e.User,a=(0,v.useMemo)((()=>(0,X.Z)({pattern:/@\[(.+?)\]\((\d)\)|\n/g,decorator(e,n){const a=e.match(/@\[(.+?)\]\((\d)\)/);return a?v.createElement(C.rU,{key:e+n,to:`/workspace/${t}/dm/${a[2]}`},"@",a[1]):v.createElement("br",{key:n})},input:e.content})),[e.content]);return v.createElement(J,null,v.createElement("div",null,v.createElement("img",{src:K().url(n.email,{s:"36px"}),alt:n.nickname})),v.createElement("div",{style:{flexWrap:"wrap"}},v.createElement("div",{style:{display:"flex",flex:"0 0 100%",alignItems:"center"}},v.createElement("b",{style:{marginRight:5}},n.nickname),v.createElement("span",{style:{fontSize:12}},V()(e.createdAt).format("h:mm A"))),v.createElement("p",{style:{flex:"0 0 100%",margin:0}},a)))})),te=(0,i.Z)("div",{target:"e1jqbxcr0"})({name:"1dpnw7g",styles:"width:100%;display:flex;flex:1;"}),ne=(0,i.Z)("section",{target:"e1jqbxcr1"})({name:"j6nott",styles:"margin-top:20px;border-top:1px solid #eee;"}),ae=(0,i.Z)("div",{target:"e1jqbxcr2"})({name:"8ji0yp",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;& button{font-weight:bold;font-size:13px;height:28px;line-height:27px;padding:0 16px;z-index:2;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0,0,0,0.08);border-radius:24px;position:relative;top:-13px;background:white;border:none;outline:none;}"});var re=n(1298);const le=({scrollbarRef:e,isReachingEnd:t,isEmpty:n,chatSections:a,setSize:r})=>{const l=(0,v.useCallback)((a=>{0!==a.scrollTop||t||n||r((e=>e+1)).then((()=>{e.current?.scrollTop(e.current?.getScrollHeight()-a.scrollHeight)}))}),[t,n]);return v.createElement(te,null,v.createElement(re.$B,{autoHide:!0,ref:e,onScrollFrame:l},Object.entries(a).map((([e,t])=>v.createElement(ne,{className:"section-"+e,key:e},v.createElement(ae,null,v.createElement("button",null,e)),t.map((e=>v.createElement(ee,{key:e.id,data:e}))))))))},oe=(0,i.Z)("header",{target:"exhfy1p0"})({name:"10in16a",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;"});var ie=n(3046);function ce(e){const t={};return e.forEach((e=>{const n=V()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[n])?t[n].push(e):t[n]=[e]})),t}var se=n(9669),de=n.n(se),pe=n(4723);const me=()=>{const{workspace:e,channel:t}=(0,_.UO)(),[n]=o(e),{data:a,revalidate:r}=(0,$.ZP)("/api/user",S.Z),{data:l}=(0,$.ZP)(`/api/workspace/${e}/channels`,S.Z),i=l?.find((e=>e.name===t)),{data:c,revalidate:s,mutate:d,setSize:p}=(0,$.g_)((n=>`/api/workspace/${e}/channel/${t}/chats?perPage=20&page=${n+1}`),S.Z),{data:m,revalidate:u}=(0,$.ZP)(a?`/api/workspace/${e}/channel/${t}/members`:null,S.Z),[g,h,x]=(0,M.Z)(""),[b,f,k]=(0,M.Z)(""),[E,y]=(0,v.useState)(!1),w=(0,v.useRef)(null),C=0===c?.[0]?.length,Z=C||c&&c[c.length-1]?.length<20,z=(0,v.useCallback)((n=>{n.preventDefault(),b&&b.trim()&&de().post(`/api/workspace/${e}/channel/${t}/member`,{email:b}).then((()=>{u(),y(!1),k("")})).catch((e=>{console.dir(e),pe.Am.error(e.response?.data,{position:"bottom-center"})}))}),[b]),I=(0,v.useCallback)((()=>{y(!1)}),[]),q=(0,v.useCallback)((n=>{if(n.preventDefault(),g?.trim()&&c&&i&&a){const n=g;d((e=>(e[0].unshift({id:(c[0][0]?.id||0)+1,content:n,UserId:a.id,User:a,createdAt:new Date,ChannelId:i.id,Channel:i}),e)),!1).then((()=>{x(""),w.current&&(console.log("scrollToBottom!"),w.current.scrollToBottom())})),de().post(`/api/workspace/${e}/channel/${t}/chat`,{content:n}).catch(console.error)}}),[g,e,t,i,w.current,a,c]),D=e=>{e.Channel.name===t&&e.UserId!==a?.id&&d((t=>(t[0].unshift(e),t)),!1).then((()=>{w.current&&(w.current.getScrollHeight()<w.current.getClientHeight()+w.current.getScrollTop()+150?(console.log("scrollToBottom!"),w.current.scrollToBottom()):pe.Am.success("새 메시지가 도착했습니다.",{onClick(){w.current?.scrollToBottom()},closeOnClick:!0}))}))};(0,v.useEffect)((()=>(n?.on("message",D),()=>{n?.off("message",D)})),[w.current,n,a]),(0,v.useEffect)((()=>{1===c?.length&&(console.log("toBottom",c),w.current?.scrollToBottom())}),[c,w.current]);const A=(0,v.useCallback)((()=>{y(!0)}),[]);if(l&&!i)return v.createElement(_.l_,{to:`/workspace/${e}/channel/일반`});const B=ce(c?[].concat(...c).reverse():[]);return v.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},v.createElement(oe,null,v.createElement("span",null,"#",t),v.createElement("div",{style:{display:"flex",flex:1,justifyContent:"flex-end",alignItems:"center"}},v.createElement("span",null,m?.length),v.createElement("button",{onClick:A,className:"c-button-unstyled p-ia__view_header__button","aria-label":"Add people to #react-native","data-sk":"tooltip_parent",type:"button"},v.createElement("i",{className:"c-icon p-ia__view_header__button_icon c-icon--add-user","aria-hidden":"true"})))),v.createElement(le,{scrollbarRef:w,isReachingEnd:Z,isEmpty:C,chatSections:B,setSize:p}),v.createElement(G,{onSubmitForm:q,chat:g,onChangeChat:h,placeholder:"Message #"+t,data:m}),v.createElement(N,{show:E,onCloseModal:I},v.createElement("form",{onSubmit:z},v.createElement(ie.__,{id:"member-label"},v.createElement("span",null,"채널 멤버 초대"),v.createElement(ie.II,{id:"member",value:b,onChange:f})),v.createElement(ie.zx,{type:"submit"},"생성하기"))),v.createElement(pe.Ix,{position:"bottom-center"}))},ue=(0,i.Z)("header",{target:"egh2dki0"})({name:"i5rome",styles:"height:64px;display:flex;width:100%;--saf-0:rgba(var(--sk_foreground_low,29,28,29),0.13);box-shadow:0 1px 0 var(--saf-0);padding:20px 16px 20px 20px;font-weight:bold;align-items:center;& img{margin-right:5px;}"}),ge=()=>{const{workspace:e,id:t}=(0,_.UO)(),[n]=o(e),{data:a}=(0,$.ZP)("/api/user",S.Z),{data:r}=(0,$.ZP)(`/api/workspace/${e}/user/${t}`,S.Z),{data:l,revalidate:i,mutate:c,setSize:s}=(0,$.g_)((n=>`/api/workspace/${e}/dm/${t}/chats?perPage=20&page=${n+1}`),S.Z),[d,p,m]=(0,M.Z)(""),u=(0,v.useRef)(null),g=0===l?.[0]?.length,h=g||l&&l[l.length-1]?.length<20,x=(0,v.useCallback)((n=>{if(n.preventDefault(),d?.trim()&&l){const n=d;c((e=>(e[0].unshift({id:(l[0][0]?.id||0)+1,content:n,SenderId:a.id,Sender:a,ReceiverId:r.id,Receiver:r,createdAt:new Date}),e)),!1).then((()=>{m(""),u.current&&(console.log("scrollToBottom!"),u.current.scrollToBottom())})),de().post(`/api/workspace/${e}/dm/${t}/chat`,{content:d}).catch(console.error)}}),[d,e,t,u.current,r,l]),b=e=>{e.SenderId===Number(t)&&a.id!==Number(t)&&c((t=>(t[0].unshift(e),t)),!1).then((()=>{u.current&&(u.current.getScrollHeight()<u.current.getClientHeight()+u.current.getScrollTop()+150?(console.log("scrollToBottom!"),u.current.scrollToBottom()):pe.Am.success("새 메시지가 도착했습니다.",{onClick(){u.current?.scrollToBottom()},closeOnClick:!0}))}))};if((0,v.useEffect)((()=>(n?.on("dm",b),()=>{n?.off("dm",b)})),[u.current,n,t]),(0,v.useEffect)((()=>{1===l?.length&&(console.log("toBottom",l),u.current?.scrollToBottom())}),[l,u.current]),!r||!a)return null;const f=ce(l?[].concat(...l).reverse():[]);return v.createElement("div",{style:{display:"flex",flexWrap:"wrap",height:"calc(100vh - 38px)",flexFlow:"column"}},v.createElement(ue,null,v.createElement("img",{src:K().url(r.email,{s:"24px"}),alt:r.nickname}),v.createElement("span",null,r.nickname)),v.createElement(le,{scrollbarRef:u,isReachingEnd:h,isEmpty:g,chatSections:f,setSize:s}),v.createElement(G,{onSubmitForm:x,chat:d,onChangeChat:p,placeholder:"Message "+r.nickname,data:[]}))};n(5202);const he=()=>{const e=(0,_.UO)(),{workspace:t}=((0,_.TH)(),(0,_.$B)(),(0,_.k6)(),e),[n,a]=o(t),{data:r,revalidate:l}=(0,$.ZP)("/api/user",S.Z),{data:i,revalidate:w}=(0,$.ZP)(r?`/api/workspace/${t}/channels`:null,S.Z);console.log("rerender","userData",r,"channelData",i);const[I,q]=(0,v.useState)(!1),[D,B]=(0,v.useState)(!1),[T,P]=(0,v.useState)(!1),[R,U]=(0,v.useState)(!1),[j,O]=(0,v.useState)(!1),[L,W,F]=(0,M.Z)(""),[H,Y,G]=(0,M.Z)(""),[J,Q,V]=(0,M.Z)(""),[X,ee,te]=(0,M.Z)(""),ne=(0,v.useCallback)((()=>{de().post("/api/logout").then((()=>{l()})).catch((e=>{console.dir(e),pe.Am.error(e.response?.data,{position:"bottom-center"})}))}),[]),ae=(0,v.useCallback)((e=>{e.preventDefault(),L&&L.trim()&&H&&H.trim()&&de().post("/api/workspace",{workspace:L,url:H}).then((()=>{l(),q(!1),F(""),G("")})).catch((e=>{console.dir(e),pe.Am.error(e.response?.data,{position:"bottom-center"})}))}),[L,H]),re=(0,v.useCallback)((e=>{e.preventDefault(),J&&J.trim()&&de().post(`/api/workspace/${t}/channel`,{name:J}).then((()=>{w(),P(!1),V("")})).catch((e=>{console.dir(e),pe.Am.error(e.response?.data,{position:"bottom-center"})}))}),[J]),le=(0,v.useCallback)((e=>{e.preventDefault(),X&&X.trim()&&de().post(`/api/workspace/${t}/member`,{email:X}).then((()=>{w(),B(!1),te("")})).catch((e=>{console.dir(e),pe.Am.error(e.response?.data,{position:"bottom-center"})}))}),[X]),oe=(0,v.useCallback)((()=>{q(!0)}),[]),ce=(0,v.useCallback)((()=>{P(!0)}),[]),se=(0,v.useCallback)((()=>{B(!0)}),[]),ue=(0,v.useCallback)((()=>{q(!1),P(!1),B(!1)}),[]),he=(0,v.useCallback)((()=>{U((e=>!e))}),[]),xe=(0,v.useCallback)((()=>{O((e=>!e))}),[]);return(0,v.useEffect)((()=>()=>{console.info("disconnect socket",t),a()}),[t]),(0,v.useEffect)((()=>{i&&r&&(console.info("로그인하자"),n?.emit("login",{id:r?.id,channels:i.map((e=>e.id))}))}),[r,i]),!1===r?v.createElement(_.l_,{to:"/login"}):r&&!r.Workspaces.find((e=>e.url===t))?v.createElement(_.l_,{to:"/workspace/sleact/channel/일반"}):v.createElement("div",null,v.createElement(s,null,r&&v.createElement(c,null,v.createElement("span",{onClick:he},v.createElement(d,{src:K().url(r.email,{s:"28px"}),alt:r.nickname})),R&&v.createElement(A,{style:{right:0,top:38},show:R,onCloseModal:he},v.createElement(p,{style:{display:"flex"}},v.createElement("img",{src:K().url(r.email,{s:"36px"}),alt:r.nickname}),v.createElement("div",{style:{display:"flex",flexDirection:"column",marginLeft:10}},v.createElement("span",{id:"profile-name"},r.nickname),v.createElement("span",{id:"profile-active"},"Active"))),v.createElement(m,{onClick:ne},"로그아웃")))),v.createElement(u,null,v.createElement(g,null,r?.Workspaces.map((e=>v.createElement(C.rU,{key:e.id,to:`/workspace/${e.url}/channel/일반`},v.createElement(y,null,e.name.slice(0,1).toUpperCase())))),v.createElement(E,{onClick:oe},"+")),v.createElement(h,null,v.createElement(x,{onClick:xe},r?.Workspaces.find((e=>e.url===t))?.name),v.createElement(b,null,v.createElement(A,{show:j,onCloseModal:xe,style:{top:95,left:80}},v.createElement(f,null,v.createElement("h2",null,r?.Workspaces.find((e=>e.url===t))?.name),v.createElement("button",{onClick:se},"워크스페이스에 사용자 초대"),v.createElement("button",{onClick:ce},"채널 만들기"),v.createElement("button",{onClick:ne},"로그아웃"))),v.createElement(Z,{userData:r,channelData:i}),v.createElement(z,{userData:r}))),v.createElement(k,null,v.createElement(_.rs,null,v.createElement(_.AW,{path:"/workspace/:workspace/channel/:channel",component:me}),v.createElement(_.AW,{path:"/workspace/:workspace/dm/:id",component:ge})))),v.createElement(N,{show:I,onCloseModal:ue},v.createElement("form",{onSubmit:ae},v.createElement(ie.__,{id:"workspace-label"},v.createElement("span",null,"워크스페이스 이름"),v.createElement(ie.II,{id:"workspace",value:L,onChange:W})),v.createElement(ie.__,{id:"workspace-url-label"},v.createElement("span",null,"워크스페이스 url"),v.createElement(ie.II,{id:"workspace-url",value:H,onChange:Y})),v.createElement(ie.zx,{type:"submit"},"생성하기"))),v.createElement(N,{show:T,onCloseModal:ue},v.createElement("form",{onSubmit:re},v.createElement(ie.__,{id:"channel-label"},v.createElement("span",null,"채널 이름"),v.createElement(ie.II,{id:"channel",value:J,onChange:Q})),v.createElement(ie.zx,null,"생성하기"))),v.createElement(N,{show:D,onCloseModal:ue},v.createElement("form",{onSubmit:le},v.createElement(ie.__,{id:"member-label"},v.createElement("span",null,"이메일"),v.createElement(ie.II,{id:"member",type:"email",value:X,onChange:ee})),v.createElement(ie.zx,{type:"submit"},"초대하기"))),v.createElement(pe.Ix,{position:"bottom-center"}))}},418:()=>{}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,